image: python:3.8 # Choose an image matching your project needs

clone:
  depth: full              # SonarCloud scanner needs the full history to assign issues properly

definitions:
  default:
      - parallel:
        - step: &build-unit-test
            name: Running Unit Tests
            caches:
              - pip
            script:
              - pip install pytest
              - pytest -v tests/* --junitxml=test-reports/report.xml
              
        - step: &build-lint-flake8
            name: Checking flake8 Rules
            script:
              # Enforce style consistency across Python projects https://flake8.pycqa.org/en/latest/manpage.html
              - pip install flake8
              - flake8 . --extend-exclude=dist,build --show-source --statistics
  caches:
    sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
  steps:
    - step: &build-test-sonarcloud
        name: Analizing Source Code 
        caches:
          - sonar
        script:
          - pip install poetry
          - poetry install          # Build your project and run
          - pipe: sonarsource/sonarcloud-scan:1.4.0
    - step: &check-quality-gate-sonarcloud
        name:  Quality Checking
        script:
          - pipe: sonarsource/sonarcloud-quality-gate:0.1.6

pipelines:                 # More info here: https://confluence.atlassian.com/bitbucket/configure-bitbucket-pipelines-yml-792298910.html
  branches:
    master:
      - step: *build-unit-test
      - step: *build-lint-flake8
      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud
    release:
      - step: *build-unit-test
      - step: *build-lint-flake8
      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud

  pull-requests:
    '**':
      - step: *build-unit-test
      - step: *build-lint-flake8
      - step: *build-test-sonarcloud
      - step: *check-quality-gate-sonarcloud
