name: Pysuit Analysis

on:
  push:
    branches:
    - "*"

  pull_request:
    branches:
    - "*"


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry add flake8 pytest
        poetry install
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Flake8 Rules
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 pysuit tests --count  --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 pysuit tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Checking Unit Tests 
      run: |
        poetry run pytest tests
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          
  sonarcloud:
    name: Analizing Source Code
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' or github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Quality Checking
        uses: SonarSource/sonarcloud-github-action@master
      - name: poetry install
        run: pip install poetry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}